name: Build and Release WPF App

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Package WPF App
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Adjust for your .NET version

      - name: Get Version from .csproj
        id: get_version
        run: |
          $version = [xml](Get-Content ./AudioSplitter.UI/AudioSplitter.UI.csproj)
          $version = $version.Project.PropertyGroup.Version
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        run: dotnet publish -c Release -r win-x64 --self-contained true -o ./publish

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Generate Inno Setup Script
        run: |
          @'
          [Setup]
          AppName=Audio Sample Splitter
          AppVersion=${{ env.VERSION }}
          DefaultDirName={pf}\Audio Sample Splitter
          DefaultGroupName=Audio Sample Splitter
          OutputDir=.
          OutputBaseFilename=AudioSplitterSetup
          Compression=lzma2
          SolidCompression=yes
          ArchitecturesInstallIn64BitMode=x64
          
          [Files]
          Source: "publish\*"; DestDir: "{app}"; Flags: recursesubdirs
          
          [Icons]
          Name: "{group}\Audio Sample Splitter"; Filename: "{app}\AudioSplitter.exe"
          Name: "{desktop}\Audio Sample Splitter"; Filename: "{app}\AudioSplitter.exe"; WorkingDir: "{app}"; IconFilename: "{app}\AudioSplitter.exe"
          
          [Run]
          Filename: "{app}\AudioSplitter.exe"; Description: "Launch the application"; Flags: nowait postinstall skipifsilent          
          '@ | Out-File -FilePath installer.iss -Encoding utf8

      - name: Build Installer
        run: iscc installer.iss

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AudioSplitterSetup.exe
          path: ./AudioSplitterSetup.exe

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Installer Artifact
        uses: actions/download-artifact@v4
        with:
          name: AudioSplitterSetup.exe
          path: ./

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: AudioSplitterSetup.exe
          tag_name: v${{ env.VERSION }}
          release_name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GH_PAT }}

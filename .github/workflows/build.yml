name: Build and Release WPF App (Portable)

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Package WPF App (Portable)
    runs-on: windows-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Adjust for your .NET version

      - name: Get Version from .csproj
        id: get_version
        run: |
          $version = [xml](Get-Content ./AudioSplitter.UI/AudioSplitter.UI.csproj)
          $version = $version.Project.PropertyGroup.Version
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application (Portable)
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true -o ./publish /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true

      - name: Create ZIP Archive
        run: Compress-Archive -Path ./publish/* -DestinationPath AudioSplitterPortable.zip

      - name: Upload Portable ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AudioSplitterPortable.zip
          path: ./AudioSplitterPortable.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Portable ZIP Artifact
        uses: actions/download-artifact@v4
        with:
          name: AudioSplitterPortable.zip
          path: ./

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: AudioSplitterPortable.zip
          tag_name: v${{ needs.build.outputs.version }}
          release_name: "Release v${{ needs.build.outputs.version }} (Portable)"
          draft: false
          prerelease: false
          token: ${{ secrets.GH_PAT }}

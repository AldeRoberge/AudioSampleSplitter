name: Build and Release WPF App

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Test WPF App
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # Adjust for your .NET version

      - name: Get Version from .csproj
        id: get_version
        run: |
          $version = [xml](Get-Content ./AudioSplitter/AudioSplitter.csproj)
          $version = $version.Project.PropertyGroup.Version
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        run: dotnet publish -c Release -r win-x64 --self-contained true -o ./publish

      - name: Archive Build
        run: |
          $zipName = "audio-sample-splitter-${{ env.VERSION }}-x64.zip"
          Compress-Archive -Path ./publish/* -DestinationPath ./$zipName
          echo "ZIP_NAME=$zipName" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ./${{ env.ZIP_NAME }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: Rename Artifact
        run: mv ./${{ env.ZIP_NAME }}/artifact.zip ./${{ env.ZIP_NAME }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_NAME }}
          tag_name: v${{ env.VERSION }}
          release_name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GH_PAT }}
